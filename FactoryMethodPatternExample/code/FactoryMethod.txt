using System;

public interface IDocument
{
    void Open();
}

public class WordDocument : IDocument
{
    public void Open()
    {
        Console.WriteLine("Opening a Word Document...");
    }
}

public class PdfDocument : IDocument
{
    public void Open()
    {
        Console.WriteLine("Opening a PDF Document...");
    }
}

public class ExcelDocument : IDocument
{
    public void Open()
    {
        Console.WriteLine("Opening an Excel Document...");
    }
}

public abstract class DocumentFactory
{
    public abstract IDocument CreateDocument();
}

public class WordFactory : DocumentFactory
{
    public override IDocument CreateDocument()
    {
        return new WordDocument();
    }
}

public class PdfFactory : DocumentFactory
{
    public override IDocument CreateDocument()
    {
        return new PdfDocument();
    }
}

public class ExcelFactory : DocumentFactory
{
    public override IDocument CreateDocument()
    {
        return new ExcelDocument();
    }
}

public class Program
{
    public static void Main()
    {
        DocumentFactory factory = new WordFactory();
        IDocument doc1 = factory.CreateDocument();
        doc1.Open(); 

        factory = new PdfFactory();
        IDocument doc2 = factory.CreateDocument();
        doc2.Open(); 

        factory = new ExcelFactory();
        IDocument doc3 = factory.CreateDocument();
        doc3.Open(); 
    }
}
